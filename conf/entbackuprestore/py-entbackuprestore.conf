ent_backup_restore.enterprise_backup_restore_test.EnterpriseBackupRestoreTest:
    test_backup_restore_sanity,items=1000
    test_backup_create
    test_backup_create,exclude-buckets='default'
    test_backup_create,include-buckets='default'
    test_backup_create,disable-bucket-config=True,disable-views=True,disable-gsi-indexes=True,disable-ft-indexes=True,disable-data=True
    #fresh cluster - no force update
    test_backup_restore_sanity,items=1000
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1
    test_backup_restore_sanity,items=1000,number_of_backups=2
    test_backup_restore_sanity,items=1000,number_of_backups=5
    test_backup_restore_sanity,items=1000,number_of_backups=10
    #existing cluster - no force update
    test_backup_restore_sanity,items=1000,reset-restore-cluster=False
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1,reset-restore-cluster=False
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1,reset-restore-cluster=False
    #fresh cluster - force update
    test_backup_restore_sanity,items=1000,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=2,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=5,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=10,force-updates=True
    #existing cluster - force update
    test_backup_restore_sanity,items=1000,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=2,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=5,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=10,reset-restore-cluster=False,force-updates=True
    #ops_type create and delete are to be added - need to clarify behaviour for parallel ops while taking backup
    test_backup_restore_with_ops,items=1000,force-updates=True
    test_backup_restore_with_ops,items=1000,number_of_backups=2,force-updates=True
    test_backup_restore_with_ops,items=1000,number_of_backups=5,force-updates=True
    test_backup_restore_with_ops,items=1000,number_of_backups=10,force-updates=True
    #backup while rebalance is going on - fresh cluster
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,skip_consistency=True,per_node=False
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,skip_consistency=True,per_node=False
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,skip_consistency=True,per_node=False
    #backup after rebalance is done - fresh cluster
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,skip_consistency=True,per_node=False,force-updates=True
    #backup while rebalance is going on - existing cluster
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,same-cluster=True,skip_consistency=True,per_node=False
    #backup after rebalance is done - existing cluster
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    #backup and restore with expiration
    test_backup_restore_sanity,items=1000,expires=30
    #backup list command tests - currently only works for 1 backup and 1 bucket
    test_backup_list,items=1000
    #backup compact tests
    test_backup_compact,items=1000
    test_restore_from_compacted_backup,items=1000
    #backup and restore on non master node
    test_backup_restore_sanity,items=1000,non-master=True,nodes_init=2
    #backup and restore with nodes reshuffling to different groups
    test_backup_restore_with_nodes_reshuffle,items=1000,nodes_init=2,same-cluster=True
    test_backup_restore_with_nodes_reshuffle,items=1000,nodes_init=2,same-cluster=True,replicas=0
    #backup and restore with firewall
    test_backup_restore_with_firewall,items=1000,skip_buckets=True
    #backup and restore with audit
    test_backup_restore_with_audit,items=1000
    #backup and restore to a cluster with lesser number of nodes - nodes_init should be >= 3
    test_backup_restore_with_lesser_nodes,items=1000,nodes_init=3
    #backup and restore should skip memcached buckets
    test_backup_and_restore_with_memcached_buckets,memcached_buckets=1,items=1000
    #backup list command options - test needs two buckets
    test_backup_list_optional_switches,items=1000,sasl_buckets=1
    #backup and restore - crash scenarios
    test_backup_with_erlang_crash_and_restart,items=500000
    #this test case will pass when MB-17200 is fixed
    test_backup_with_couchbase_stop_and_start,items=500000
    test_backup_with_memcached_crash_and_restart,items=500000
    test_backup_with_erlang_crash,items=500000
    test_backup_with_couchbase_stop,items=500000
    test_backup_with_memcached_crash,items=500000
    test_restore_with_erlang_crash_and_restart,items=500000,skip_buckets=True
    test_restore_with_couchbase_stop_and_start,items=500000,skip_buckets=True
    test_restore_with_memcached_crash_and_restart,items=500000,skip_buckets=True
    #restore crash scenarios will pass when MB-17359 is fixed
    test_restore_with_erlang_crash,items=500000,skip_buckets=True
    test_restore_with_couchbase_stop,items=500000,skip_buckets=True
    test_restore_with_memcached_crash,items=500000,skip_buckets=True
    test_merge_with_crash,items=500000
    test_compact_with_crash,items=500000
    #backup merge command scenarios
    test_backup_merge,items=1000,number_of_backups=5
    test_backup_merge_with_restore,items=1000
    test_backup_merge_with_unmerged,items=1000
    #backup purge and resume scenarios
    test_backup_purge,purge=True,items=500000
    test_backup_resume,resume=True,items=500000
    #backup and restore with deletes
    test_backup_restore_with_deletes,items=1000
    #backup and restore with failover - nodes_init should be 2
    test_backup_restore_with_failover,items=1000,nodes_init=2,graceful=True,recoveryType=delta
    test_backup_restore_with_failover,items=1000,nodes_init=2,graceful=True
    test_backup_restore_with_failover,items=1000,nodes_init=2,recoveryType=delta
    test_backup_restore_with_failover,items=1000,nodes_init=2
    #backup and restore with python SDK - python SDK should be installed on all nodes
    test_backup_restore_with_python_sdk,items=1000
    #backup and restore with bucket flush and recreate - should restore to same cluster
    test_backup_restore_with_flush,items=1000,same-cluster=True
    test_backup_restore_with_recreate,items=1000,same-cluster=True
    #backup commands required parameters negative input scenarios
    test_backup_create_negative_args
    test_backup_cluster_restore_negative_args
    test_backup_cluster_restore_negative_args,command="restore"
    test_backup_list_negative_args
    test_backup_compact_negative_args
    test_backup_merge_negative_args
    test_backup_remove_negative_args
    #views and indexes scenarios
    test_backup_restore_with_views,items=1000
    test_backup_restore_with_gsi,items=1000
    test_backup_restore_with_fts,items=1000
    #xdcr scenarios
    test_backup_restore_with_xdcr,items=200000
    #warmup scenarios
    test_backup_restore_with_warmup,items=200000
    #dgm scenarios - uncomment after MB-17941 is fixed
    #test_backup_restore_with_dgm
    #large number of mutations
    test_backup_restore_with_ops,items=250000
    #backup and restore with cluster settings
    test_backup_restore_sanity,items=1000,enable-autofailover=True,autofailover-timeout=30
    test_backup_restore_with_auto_compaction,items=1000
    test_backup_restore_with_update_notifications,items=1000
    test_backup_restore_with_alerts,items=1000
    #backup list with large number of backups
    test_list_with_large_number_of_backups,items=1000
    #misc scenarios - uncomment when MB-18724 is fixed
    #test_backup_restore_misc,items=1000
    #backup and restore with upgrade
    test_backup_restore_after_upgrade,items=1000,initial_version=3.1.3-1823,upgrade_version=4.5.0-1065
