ent_backup_restore.enterprise_backup_restore_test.EnterpriseBackupRestoreTest:
    test_backup_restore_sanity,items=1000
    test_backup_create
    test_backup_create,exclude-buckets='default'
    test_backup_create,include-buckets='default'
    test_backup_create,disable-bucket-config=True,disable-views=True,disable-gsi-indexes=True,disable-ft-indexes=True,disable-data=True
    #the following sanity testcases are for restoring onto a fresh cluster after backup - testcases for restoring to an
    #existing cluster will be added later
    test_backup_restore_sanity,items=1000
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1
    test_backup_restore_sanity,items=1000,number_of_backups=2
    test_backup_restore_sanity,items=1000,number_of_backups=5
    test_backup_restore_sanity,items=1000,number_of_backups=10
    #ops_type create and delete are to be added - need to clarify behaviour for parallel ops while taking backup
    test_backup_restore_with_ops,items=1000
    test_backup_restore_with_ops,items=1000,number_of_backups=2
    test_backup_restore_with_ops,items=1000,number_of_backups=5
    test_backup_restore_with_ops,items=1000,number_of_backups=10
    #behaviour of backup restore tool while a rebalance is in progress is still undefined
    #test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1
    #test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1
    #test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0